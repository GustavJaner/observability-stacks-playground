# Extensions are optional components that expand the capabilities of the Collector to accomplish tasks not directly involved with processing telemetry data
extensions:
  health_check: # Health Check extension enables an HTTP url that can be probed to check the status of the OpenTelemetry Collector. This extension can be used as a liveness and/or readiness probe on Kubernetes.
  pprof: # Performance Profiler extension enables the golang net/http/pprof endpoint. This is typically used by developers to collect performance profiles and investigate issues with the service.
  zpages: # Enables an extension that serves zPages, an HTTP endpoint that provides live data for debugging different components that were properly instrumented for such. All core exporters and receivers provide some zPage instrumentation.

receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318

exporters:
  file: # Data sources: traces, metrics, logs
    path: ./filename.json

  debug: # Data sources: traces, metrics, logs. This will export/print the data to stdout
    verbosity: detailed

  prometheus: # Data sources: metrics
    endpoint: 0.0.0.0:8889 # This endpoint will be scraped by Prometheus
    namespace: default
    metric_expiration: 1m # (default = 5m): defines how long metrics are exposed without updates
    send_timestamps: false # (default = false): if true, sends the timestamp of the underlying metric sample in the response.
    add_metric_suffixes: true # (default = true): If false, addition of type and unit suffixes is disabled.
    enable_open_metrics: true # (default = false): If true, metrics will be exported using the OpenMetrics format.  Exemplars are only exported in the OpenMetrics format, and only for histogram and monotonic sum (i.e. counter) metrics.
    const_labels:
      foo: bar

  otlp/trace:
    endpoint: http://tempo:4319 # Export(push) otlp traces to Tempo
    tls:
      insecure: true

# Any of the components configured above must be defined in the service section to be enabled
service:
  extensions: [zpages]

  pipelines:
    metrics:
      receivers: [otlp]
      exporters: [debug, prometheus] # Export to stdout and Prometheus
    traces:
      receivers: [otlp]
      exporters: [debug, otlp/trace]
