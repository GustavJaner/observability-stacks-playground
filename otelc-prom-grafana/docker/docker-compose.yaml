services:
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.103.1 # :latest
    volumes:
      - ./otel-collector-config.yaml:/etc/otelcol-contrib/config.yaml
    ports:
      - 1888:1888   # pprof extension
      - 8888:8888   # Prometheus metrics exposed by the Collector
      - 8889:8889   # Prometheus exporter metrics
      - 13133:13133 # health_check extension
      - 4317:4317   # OTLP gRPC receiver
      - 4318:4318   # OTLP http receiver
      - 55679:55679 # zpages extension

  prometheus:
    image: prom/prometheus:v2.53.3 # :latest
    # command:
    #   - --config.file=/etc/prometheus/prometheus.yaml
    #   - --web.enable-remote-write-receiver
    #   - --enable-feature=exemplar-storage
    #   - --enable-feature=native-histograms
    volumes:
      - ./prometheus-config.yaml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
    depends_on:
      - otel-collector

  loki:
    image: grafana/loki:3.2.1 # :latest
    ports:
      - 3100:3100
    volumes:
      - ./loki-config.yaml:/etc/loki/loki-config.yaml

  promtail:
    image: grafana/promtail:3.2.1 # :latest
    volumes:
      - ./promtail-config.yaml:/etc/promtail/promtail-config.yaml

  tempo-init:
    image: &tempoImage grafana/tempo:2.6.1 # :latest
    user: root
    entrypoint:
      - "chown"
      - "10001:10001"
      - "/var/tempo"
    volumes:
      - ./tempo-data:/var/tempo

  tempo:
    image: *tempoImage
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./tempo-config.yaml:/etc/tempo.yaml
      - ./tempo-data:/var/tempo
    ports:
      - 3200:3200 # tempo
      - 9095:9095 # tempo grpc
      - 4319:4319 # otlp grpc # defualt: 4317:4317
      - 4320:4320 # otlp http # default: 4318:4318
    depends_on:
      - tempo-init

  grafana:
    image: grafana/grafana:11.3.0 # :latest
    restart: unless-stopped
    volumes:
      - ./grafana-config.ini:/etc/grafana/grafana.ini # Override default config
      - ./grafana-provisioning/datasources:/etc/grafana/provisioning/datasources # Provision data sources IaC
      - ./grafana-provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana-dashboards:/var/lib/grafana/dashboards
      # - ./grafana-storage:/var/lib/grafana # This will use the local volume in this directory. If it doesn't exist, it will be created. Useful for persisitng dashboards clicked in the UI
      # - grafana-storage:/var/lib/grafana # If the Docker volume: uncomment the volumes section below
    ports:
      - 3000:3000
    depends_on:
      - prometheus
      - loki
      - tempo

# volumes:
#  grafana-storage: {} # This will create and manage a volume in Docker. Configure grafana.volume - grafana-storage:/var/lib/grafana